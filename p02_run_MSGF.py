import os,glob,pdb
import multiprocessing as mp
import subprocess
from natsort import natsorted
import argparse

def run_cmd(cmd):
    subprocess.call(cmd,shell=True)# import time


def run_MSGF(msgf_cmd_path,thread):
    '''this function run all the commands generated by DBlist'''
    cmds = []
    cmd_fns = natsorted(glob.glob(msgf_cmd_path+'/*.txt'))
    for cmd_fn in cmd_fns:
        with open(cmd_fn) as f:
            for line in f:
                item = line.strip().split()
                item[3] = '/home/shangzhong/Codes/Proteogenomics/MSGF_Enosi/MSGFPlus.jar'
                if not os.path.exists(item[9]):
                    cmds.append(' '.join(item))
    cmds = natsorted(cmds)
    pool = mp.Pool(processes=thread)
    for cmd in cmds:
        pool.apply_async(run_cmd,args=(cmd,))
    pool.close()
    pool.join()


cwd = os.getcwd()

parser = argparse.ArgumentParser(description='run MSGF in parallel')
parser.add_argument('-p','--path',action='store',dest='path',help='path to the main foler that has spectrum folder',default=cwd)
parser.add_argument('-l','--list',action='store',dest='list',help='folder that has list of comamnds to run',default='list')
parser.add_argument('-t','--thread',action='store',dest='thread',type=int,help='number of thread',default=1)

args = parser.parse_args()

path = args.path
cmd_path = args.list
t = args.thread


os.chdir(path)
out_path = path+'/MSGFresult'
if not os.path.exists(out_path): os.mkdir(out_path)
dbs = natsorted(glob.glob('../sequence*'))
for db in dbs:
    if not os.path.exists(out_path+'/'+db.split('/')[-1]): os.mkdir(out_path+'/'+db.split('/')[-1])

run_MSGF(cmd_path,t)
