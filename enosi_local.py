import os,glob
import multiprocessing as mp
import subprocess
from natsort import natsorted

path = '/data/s3cha/CHO_ENOSI_JOB/e22076b9e7ab40ef8fc2c63eddf67eba/group4'

enosi_path = '/data/s3cha/CHO_ENOSI_JOB/tool/2014.1208'
'''
python /data/s3cha/CHO_ENOSI_JOB/tool/2014.1208/DBprep.py 
-d sequence1 -d sequence2 -d sequence3 -d sequence4  
-s convert_spectrum -o list -db DBlist -t 15ppm -tda 1 -m 3 -inst 0 -e 1 -ti 0,1 -ntt 2 
-mod mod/group3_mod.txt -thread 1
'''
def run_cmd(cmd):
    subprocess.call(cmd,shell=True)# import time


def run_MSGF(msgf_cmd_path,thread):
    '''this function run all the commands generated by DBlist'''
    cmds = []
    cmd_fns = natsorted(glob.glob(msgf_cmd_path+'/*.txt'))
    for cmd_fn in cmd_fns:
        with open(cmd_fn) as f:
            for line in f:
                item = line.strip().split()
                if not os.path.exists(item[9]):
                    cmds.append(' '.join(item))
    cmds = natsorted(cmds)
    pool = mp.Pool(processes=thread)
    for cmd in cmds:
        pool.apply_async(run_cmd,args=(cmd,))
    pool.close()
    pool.join()



db_path = 'DBlist'
msgf_cmd_path = 'list'
msgf_res_path = 'MSGFresult'
spectrum_path = '/spectrum'
new_spec_path = 'convert_spectrum'
mod = 'mod'

os.chdir(path)

if not os.path.exists(msgf_cmd_path): os.mkdir(msgf_cmd_path)
if not os.path.exists(mod): os.mkdir(mod)
if not os.path.exists(msgf_res_path): os.mkdir(msgf_res_path)
for n in range(1,5):
    if not os.path.exists(msgf_res_path+'/sequence'+str(n)): os.mkdir(msgf_res_path+'/sequence'+str(n))
#===============================================================================
#                     1. convert spectrum mgf file
#===============================================================================
# n = 75
# mgfs = natsorted(subprocess.check_output('find spectrum -name *.mgf',shell=True).split('\n'))

# with open('mgf_fn_match.txt','a') as f:
#     for mgf in mgfs:
#         if mgf == '':
#             continue
#         new_mgf = 'spectrum-'+str(n).zfill(5)+'.mgf'
#         if not os.path.exists(new_spec_path): os.mkdir(new_spec_path)
#         os.rename(mgf,new_spec_path+'/'+new_mgf)
#         f.write(new_mgf+'\t'+mgf+'\n')
#         n += 1


#===============================================================================
#                     2. run MSGF for all the massspectrum
#===============================================================================
# run_MSGF(msgf_cmd_path,26)


#===============================================================================
#                     3. run multistage fdr
#===============================================================================
import time
start = time.time()
 
# db_folders = natsorted(os.listdir(db_path))
# db_folders = ['-d '+folder for folder in db_folders]
# cmd = ('python {multi_fdr} {db} -mz {msgf} -o multiFDR_result -fdr 0.01').format(multi_fdr=enosi_path+'/MultistageFDR_part.py',
#                         db=' '.join(db_folders),msgf='MSGFresult')
# print cmd
# run_cmd(cmd)

'''
python /data/s3cha/CHO_ENOSI_JOB/tool/2014.1208/MultistageFDR_part.py -d sequence1 -d sequence5 -mz test_MSGFresult/ 
-o test_mutilFDR_result -fdr 0.01
'''
# #===============================================================================
# #                     4. run enosi
# #===============================================================================
db_folders = natsorted(['sequence'+str(n) for n in range(1,5)])
db_folders = ['-db '+folder for folder in db_folders][1:]
cmd = ('python {enosi} -i out_tsv/Novel.txt {db} -r gff -o enosi_out').format(
                enosi=enosi_path+'/Enosi_2014_10_29.py',db=' '.join(db_folders),spectrum=new_spec_path)
print cmd
run_cmd(cmd)
print time.time() - start
# '''
# python /data/s3cha/CHO_ENOSI_JOB/tool/2014.1208/Enosi_2014_10_29.py -i test_mutilFDR_result/Novel.txt 
# -db sequence1/ -db sequence5/ -r test_gff -o test_out -s test_spectrum/
# '''


# python /home/shangzhong/Codes/Projects/Proteogenomics/p03_split_mzid_to_subfolders.py -m MSGFresult -o MSGFsplit




